# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "neutron", "master", "unstable" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    if: "!contains(github.event.commits[0].author, 'Submodule Updater')"
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Add mask
      - name: add log mask
        run: echo "::add-mask::${{ secrets.USERNAME }}"
        
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - name: Build
        run: |
          ./build.sh

      - name: Upload windows installer
        uses: actions/upload-artifact@v2.2.4
        with:
          # Artifact name
          name: win64-installer
          # A file, directory or wildcard pattern that describes what to upload
          path: neutron/build/work/datcordSetup-win64.exe

      - name: Upload linux tarball
        uses: actions/upload-artifact@v2.2.4
        with:
          # Artifact name
          name: datcord-linux-x86_64
          # A file, directory or wildcard pattern that describes what to upload
          path: neutron/build/datcord.tar.bz2

      
      - name: Upload appimage
        uses: actions/upload-artifact@v2.2.4
        with:
          # Artifact name
          name: datcord-appimage-x86_64
          # A file, directory or wildcard pattern that describes what to upload
          path: neutron/build/Datcord-x86_64.AppImage
          
