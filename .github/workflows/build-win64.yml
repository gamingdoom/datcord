name: Build-Cross-Win-x86_64

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, unstable ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      #- name: Cache
      #  uses: actions/cache@v3.0.11
      #  with:
      #    path: mozilla-unified
      #    key: ${{ runner.os }}-mozilla-unified
      
      # Add mask
      - name: add log mask
        run: echo "::add-mask::${{ secrets.USERNAME }}"
          
      # Runs a set of commands using the runners shell
      - name: Get deps, build and package
        run: |
          ls
          # These apt commands are used for installing deps for builds on debian. They are not used on my self-hosted runner
          #sudo apt upgrade && sudo apt update
          #sudo add-apt-repository universe
          #sudo apt install libfuse2
          #sudo apt install python3 python3-distutils python3-pip build-essential libpython3-dev m4 nodejs unzip uuid zip libasound2-dev libcurl4-openssl-dev libdbus-1-dev libdbus-glib-1-dev libdrm-dev libgtk-3-dev libpulse-dev libx11-xcb-dev libxt-dev xvfb rustc clang nasm
          #sudo apt install mercurial python3 python3-dev python3-pip curl wget dpkg-sig msitools p7zip-full upx-ucl libssl-dev zstd wine64-tools wine
          #pip3 install --upgrade setuptools
          #pip3 install wheel setuptools zstandard==0.15.2 cffi>=1.13.0 glean-parser==2.5.0 appdirs>=1.4 Click>=7 diskcache>=4 importlib-metadata iso8601>=0.1.10 Jinja2>=2.10.1 jsonschema>=3.0.2 attrs>=17.4.0 MarkupSafe>=2.0 pycparser pyrsistent>=0.14.0 PyYAML>=3.13 six>=1.11.0 typing-extensions>=3.6.4  yamllint>=1.18.0  pathspec>=0.5.3 zipp>=0.5 psutil==5.8.0 
          DISPLAY=:0 ./crossCompileForWindows.sh
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          # Artifact name
          name: win64-installer
          # A file, directory or wildcard pattern that describes what to upload
          path: work/datcordSetup-win64.exe
            
# name: Build-Win64

# # Controls when the workflow will run
# on:
#   # Triggers the workflow on push or pull request events but only for the master branch
#   push:
#     branches: [ master, unstable ]
#   pull_request:
#     branches: [ master ]

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: windows-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v2
      
#       - name: Cache
#         uses: actions/cache@v2.1.6
#         with:
#         # A list of files, directories, and wildcard patterns to cache and restore
#           path: mozilla-unified
#         # An explicit key for restoring and saving the cache
#           key: ${{ runner.os }}-mozilla-unified
          
#       # Runs a set of commands using the runners shell
#       - name: Run a multi-line script
#         run: |
#           choco install mozillabuild cygwin nsis
#           choco install --force git
#           refreshenv
#           C:\mozilla-build\start-shell.bat /d/a/datcord/datcord/buildDatcordWin.sh
#           move C:/Users/runneradmin/mozilla-unified/obj-x86_64-pc-mingw32/dist/install/sea/*.exe C:/Users/runneradmin/mozilla-unified/obj-x86_64-pc-mingw32/dist/install/sea/datcordSetup-win64.exe
          
#       - name: Upload a Build Artifact
#         uses: actions/upload-artifact@v2.2.4
#         with:
#           # Artifact name
#           name: win64-installer
#           # A file, directory or wildcard pattern that describes what to upload
#           path: work/datcordSetup-win64.exe
          
# This is a basic workflow to help you get started with Actions
